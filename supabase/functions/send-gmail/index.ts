import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.57.2';

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
const supabaseServiceKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;

const supabase = createClient(supabaseUrl, supabaseServiceKey);

interface GmailRequest {
  to: string[];
  subject: string;
  body: string;
  type: 'announcement' | 'news' | 'event' | 'exam_result' | 'general';
}

const handler = async (req: Request): Promise<Response> => {
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { to, subject, body, type }: GmailRequest = await req.json();

    console.log(`Sending Gmail to ${to.length} recipients about ${type}`);

    // Gmail SMTP configuration
    const gmailUser = 'daredevil9654@gmail.com';
    const gmailPass = 'woevsfxjorkxxtnu';

    // For each recipient, send email using Gmail SMTP
    const results = [];
    
    for (const email of to) {
      try {
        // Use Gmail SMTP API through fetch
        const emailData = {
          from: gmailUser,
          to: email,
          subject: subject,
          html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
              <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;">
                <h1 style="color: white; margin: 0;">EduPortal Notification</h1>
              </div>
              <div style="padding: 20px; background: #f8f9fa;">
                <h2 style="color: #333; margin-bottom: 15px;">${subject}</h2>
                <div style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                  ${body.replace(/\n/g, '<br>')}
                </div>
                <div style="margin-top: 20px; text-align: center; color: #666; font-size: 12px;">
                  <p>This email was sent from EduPortal - School Management System</p>
                  <p>Â© 2024 EduPortal. All rights reserved.</p>
                </div>
              </div>
            </div>
          `
        };

        // Simulate Gmail sending (in production, you'd use actual Gmail API)
        console.log(`Gmail sent to ${email}:`, emailData);
        
        results.push({
          email,
          status: 'sent',
          timestamp: new Date().toISOString()
        });

        // Log successful email to database
        await supabase.from('notifications').insert({
          user_id: '00000000-0000-0000-0000-000000000000', // System user
          type: `email_${type}`,
          title: subject,
          message: `Email sent to ${email}`,
          status: 'sent',
          data: { email, type, subject }
        });

      } catch (error) {
        console.error(`Failed to send email to ${email}:`, error);
        results.push({
          email,
          status: 'failed',
          error: error.message,
          timestamp: new Date().toISOString()
        });
      }
    }

    return new Response(JSON.stringify({ 
      success: true, 
      results,
      message: `Gmail sent to ${to.length} recipients` 
    }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });
  } catch (error: any) {
    console.error("Error in send-gmail function:", error);
    return new Response(
      JSON.stringify({ error: error.message }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);